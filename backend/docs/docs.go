// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Логин",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "аутентификация"
                ],
                "summary": "Логин",
                "parameters": [
                    {
                        "description": "Тело запроса",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Login"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Login"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Регенерация токена",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "аутентификация"
                ],
                "summary": "Регенерация токена",
                "parameters": [
                    {
                        "description": "Тело запроса",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Refresh"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Refresh"
                        }
                    }
                }
            }
        },
        "/v1/hotel/rooms": {
            "post": {
                "description": "Получение доступных типов комнат",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "отель"
                ],
                "summary": "Получение доступных типов комнат",
                "parameters": [
                    {
                        "description": "Тело запроса",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetRooms"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetAllRooms"
                        }
                    }
                }
            }
        },
        "/v1/hotel/rooms/light": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Тогл света в комнате",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "отель"
                ],
                "summary": "Свет",
                "parameters": [
                    {
                        "description": "Тело запроса",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Light"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/hotel/rooms/reserve": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Бронь комнаты",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "отель"
                ],
                "summary": "Бронь",
                "parameters": [
                    {
                        "description": "Тело запроса",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ReserveRoom"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/hotel/rooms/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение информации по комнате для админки",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "отель"
                ],
                "summary": "Получение информации по комнате для админки",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор комнаты",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.RoomInfo"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Room": {
            "type": "object",
            "properties": {
                "floor": {
                    "type": "integer"
                },
                "hotel_id": {
                    "type": "integer"
                },
                "room_number": {
                    "type": "string"
                },
                "room_type_id": {
                    "type": "integer"
                }
            }
        },
        "entity.RoomType": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.GetRooms": {
            "type": "object",
            "required": [
                "end_date",
                "start_date"
            ],
            "properties": {
                "end_date": {
                    "type": "string",
                    "example": "29.05.2026"
                },
                "start_date": {
                    "type": "string",
                    "example": "01.12.2025"
                }
            }
        },
        "request.Light": {
            "type": "object",
            "required": [
                "state"
            ],
            "properties": {
                "state": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "request.Login": {
            "type": "object",
            "required": [
                "login"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "example": "admin"
                },
                "password": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "admin"
                }
            }
        },
        "request.Refresh": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string",
                    "example": "refresh_token"
                }
            }
        },
        "request.ReserveRoom": {
            "type": "object",
            "required": [
                "end_date",
                "room_type",
                "start_date"
            ],
            "properties": {
                "end_date": {
                    "type": "string",
                    "example": "29.05.2026"
                },
                "room_type": {
                    "type": "integer",
                    "example": 1
                },
                "start_date": {
                    "type": "string",
                    "example": "01.12.2025"
                }
            }
        },
        "response.GetAllRooms": {
            "type": "object",
            "properties": {
                "rooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.RoomType"
                    }
                }
            }
        },
        "response.Login": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "access_token"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "refresh_token"
                },
                "user": {
                    "$ref": "#/definitions/response.User"
                }
            }
        },
        "response.Refresh": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "access_token"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "refresh_token"
                }
            }
        },
        "response.RoomInfo": {
            "type": "object",
            "properties": {
                "is_active": {
                    "type": "boolean"
                },
                "room": {
                    "$ref": "#/definitions/entity.Room"
                }
            }
        },
        "response.User": {
            "type": "object",
            "properties": {
                "business_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "login": {
                    "type": "string"
                },
                "user_type": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "CRM Backend API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
